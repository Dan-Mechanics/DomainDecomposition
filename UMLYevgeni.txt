@startuml
title Dead by Daylight : Generators & Skillchecks

class Generator 
{
    type: string
    position: (x,y,z)
    progress: float
    state: List<string>
    skillcheckTimer: float
}

abstract class SkillcheckHandler
{
    currentState();
    StartSkillcheck()
}

class SpawnManager
{
    Start()
    availableSpawnPoints : List<SpawnPoint>
    SelectSpawnPoints()
}

class SpawnPoint
{
    position : (x,y,z)
    id : string
}

class Perks
{
    name : string
    luck : float
}

class Offerings
{
    name : string
    luck : float
}

class Timer
{
    timerLength : float
    onTimerComplete()
}


abstract class GeneratorStateHandler
{
    defaultRepairSpeed
    playersRepairing: int
    completedGenerators : int
    isRepairable: bool
    isInfected: bool
    currentStates: List<string>
    Update()
    addState()
    removeState()
}

object IdleState
IdleState : speed = 0

object ProgressingState
ProgressingState : speed = defaultRepairSpeed * playersRepairing

object RegressingState
RegressingState : speed = defaultRepairSpeed * -1

object CompleteState
CompleteState : speed = 0
CompleteState : isRepairable = false

object BlockedState
BlockedState : isRepairable = false

object InfectedState
InfectedState : isInfected = true

class Skillcheck
Skillcheck : difficulty = "normal"
Skillcheck : position = "center"
Skillcheck : succesModifier = +5%
Skillcheck : greatSuccesModifier = +15%
Skillcheck : failModifier = -10%
Skillcheck : triggerSize = 25%
Skillcheck : greatTriggerSize = 3%

class MadnessSkillcheck
MadnessSkillcheck : difficulty = "hard"
MadnessSkillcheck : position = "random"
MadnessSkillcheck : succesModifier = +5%
MadnessSkillcheck : greatSuccesModifier = +15%
MadnessSkillcheck : failModifier = -10%
MadnessSkillcheck : triggerSize = 25%
MadnessSkillcheck : greatTriggerSize = 3%

class RelentlessSkillcheck
RelentlessSkillcheck : difficulty = "hard"
RelentlessSkillcheck : position = "center"
RelentlessSkillcheck : succesModifier = +0%
RelentlessSkillcheck : greatSuccesModifier = +0%
RelentlessSkillcheck : failModifier = -10%
RelentlessSkillcheck : triggerSize = 3%
RelentlessSkillcheck : greatTriggerSize = 0%

enum GeneratorType 
{
    red
    yellow
    floodlight
}

Gameworld *-- Generator

Generator --> GeneratorType : type >
Generator --> GeneratorStateHandler
Generator --> SkillcheckHandler : triggers >
Generator --> SpawnManager : get spawns >

SkillcheckHandler --|> Skillcheck : trigger >
SkillcheckHandler --|> MadnessSkillcheck : killer trigger >
SkillcheckHandler --|> RelentlessSkillcheck : perk trigger >
SkillcheckHandler --> Perks
SkillcheckHandler *-- Timer


InfectedState *-- Timer

GeneratorStateHandler --> IdleState
GeneratorStateHandler --> ProgressingState
GeneratorStateHandler --> RegressingState
GeneratorStateHandler --> CompleteState
GeneratorStateHandler --> BlockedState
GeneratorStateHandler --> InfectedState

SpawnManager --> Perks : reads >
SpawnManager --> Offerings : reads >
SpawnManager --> SpawnPoint : selects from >




@enduml