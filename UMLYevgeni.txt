@startuml
title Dead by Daylight : Generators

class Generator 
{
    type: string
    position: (x,y,z)
    progress: float
    difficulty: string
    state: List<string>
}

class SkillcheckHandler
{

}

object StateHandler
StateHandler : currentStates = ["progressing", "regressing", "idle", "complete", "infected", ]

object Skillcheck
Skillcheck : difficulty = "normal"
Skillcheck : position = "center"
Skillcheck : succesModifier = +5%
Skillcheck : greatSuccesModifier = +15%
Skillcheck : failModifier = -10%
Skillcheck : triggerSize = 25%
Skillcheck : greatTriggerSize = 3%

object MadnessSkillcheck
MadnessSkillcheck : difficulty = "hard"
MadnessSkillcheck : position = "random"
MadnessSkillcheck : succesModifier = +5%
MadnessSkillcheck : greatSuccesModifier = +15%
MadnessSkillcheck : failModifier = -10%
MadnessSkillcheck : triggerSize = 25%
MadnessSkillcheck : greatTriggerSize = 3%

object RelentlessSkillcheck
RelentlessSkillcheck : difficulty = "hard"
RelentlessSkillcheck : position = "center"
RelentlessSkillcheck : succesModifier = +0%
RelentlessSkillcheck : greatSuccesModifier = +0%
RelentlessSkillcheck : failModifier = -10%
RelentlessSkillcheck : triggerSize = 3%
RelentlessSkillcheck : greatTriggerSize = 0%

enum GeneratorType 
{
    red
    yellow
    floodlight
}

enum GeneratorDifficulty 
{
    normal
    hard
    madness
}

Gameworld *-- Generator
Generator --> GeneratorType : type >
Generator --> GeneratorDifficulty : difficulty >
Generator --> StateHandler
SkillcheckHandler --> Skillcheck : triggers >
SkillcheckHandler --> MadnessSkillcheck
SkillcheckHandler --> RelentlessSkillcheck

@enduml